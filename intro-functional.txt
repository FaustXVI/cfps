De Javascript à Haskell : la programmation fonctionnelle expliquée simplement
 
Si un de vos collègue vous a déjà dit «Alors là, j'ai utilisé de l'application partielle sur cette fonction que j'ai curryfiée en utilisant des fonctions d'ordre supérieur et des closures» et que vous n'avez rien compris, alors ce talk est pour vous.
La programmation fonctionnelle présente de nombreux concepts qui viennent des maths. Et cela fait peur ! Mais appliqué à l'informatique, c'est en réalité très simple !
Durant ce live-coding consistant à refactorer un code impératif vers un code fonctionel, les concepts principaux seront introduits uniquement quand cela est utile et expliqués en profondeur.
À la fin de ce talk, les concepts suivants n'auront plus de secrets pour vous :
- La transparance référenciel
- Les fonctions comme citoyen de première classe
- Les fonctions d'ordre supérieur
- Les closure
- Le lambda calculus
- La curryfication
- L'application partielle
- La composition de fonction
- La notation «Point-free»

https://www.youtube.com/watch?v=IQ1kDpGeoCk




From Javascript to Haskell : Functional Programming made simple

Did you ever had a colleague that said «Well, it's simple. I just used a partial application on that curried function using higher order functions and closures» ? Did you understand anything ? If not, then that talk is what you are looking for.
Functional programming uses a lot of concepts that are familiar to mathematicians. And that's scary ! But, applied to computing, it's actually pretty simple !
While live coding a refactoring that transforms a imperative code to a functional one, main concepts of functional programming will be introduced when necessary and explained deeply.
    At the end of this talk, you will understand these key concepts :
    - Referential transparency
    - Functions as first class citizens
    - Higher order functions
    - Closures
    - Lambda calculus
    - Currying
    - Partial application
    - Function composition
    - «Point-free» notation

https://www.youtube.com/watch?v=3d61Zo9T1OU



SoCraTes Germany, SoCraTes France, Snowcamp, Meetups, Devoxx France, MixIT, ITAKE Unconference, BestOfWeb, Agile Grenoble, Agile France, Sunny Tech, Voxxed days Singapore
https://github.com/FaustXVI/functional-programming-introduction/tree/playing
